/*
(mostly) Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import * as THREE from "three";
import { useSpring, animated, config } from '@react-spring/three';
import { flip } from 'lodash';

export default function Astronaut({ ...props }) {

  const group = useRef()
  const { nodes, materials } = useGLTF('Astronaut_compressed.glb')

  //makes the astronaut float up and down.
  const [moveUp, setMove] = useState(true)

  const {position} = useSpring({ 
    position: moveUp ? [0,0.08,0] : [0,-0.08,0],
    config: {friction: 100, tension: 50, mass: 150},
  })

  useEffect(() => {
    setTimeout(() => {
      setMove(!moveUp)
    }, 4000)
  }, [moveUp])

  return (
    <animated.group ref={group} position = {position} {...props} dispose={null}>
      <mesh
        geometry={nodes['000_Astronaut'].geometry}
        material={materials['Astronaut_mat_35ab8c28-31ed-4d68-94f9-ecfbd445da39']}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </animated.group>
  )
}

useGLTF.preload('/Astronaut_compressed.glb')
