/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import {extend} from '@react-three/fiber';
import { FontLoader } from 'three/examples/jsm/loaders/FontLoader';
import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';
import roboto from '../fonts/Roboto_Bold.json';


extend({TextGeometry})

export default function Statue({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/statue_compressed.glb')

  const font = new FontLoader().parse(roboto)

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.StatueOfLiberty_lp002.geometry} position={[-10.06, 133.56, 7.77]} scale={2.54} > 
      <meshPhongMaterial 
          shininess={5}
          color = {"orange"}
        />
      </mesh>
      <mesh geometry={nodes.StatueOfLiberty_lp001.geometry} position={[-4.66, 28.35, -0.78]} scale={2.54}> 
        <meshPhongMaterial 
          shininess={0}
          color = {"#7e806f"}
        />
      </mesh>
      <mesh geometry={nodes.StatueOfLiberty_lp.geometry} position={[-1.92, 107.16, 3.32]} scale={2.54}>
        <meshPhongMaterial
          color = {"#65948b"}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/statue_compressed.glb')
